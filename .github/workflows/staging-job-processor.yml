name: Staging Job Queue Processor

# Job queue processor for staging environment
on:
  # schedule:
  #   - cron: '*/2 * * * *'  # UTC - DISABLED to avoid conflict with Vercel cron
  workflow_dispatch:
    inputs:
      action:
        description: Action to perform
        type: choice
        options: [process, status]
        default: process

permissions:
  contents: read

concurrency:
  group: staging-job-queue
  cancel-in-progress: true   # avoid overlapping runs

jobs:
  process-jobs:
    runs-on: ubuntu-latest
    timeout-minutes: 2
    env:
      API_URL: 'https://meridian-esg-env-staging-development-bf4f2e8a.vercel.app'
      ACTION:  ${{ github.event_name == 'workflow_dispatch' && inputs.action  || 'process' }}

    steps:
      - name: Process Job Queue
        shell: bash
        run: |
          set -euo pipefail
          echo "🕐 GitHub Actions Job Processor - $(date)"
          echo "🌐 URL: $API_URL"
          echo "⚙️  Action: $ACTION"

          if [ "$ACTION" = "status" ]; then
            echo "📊 Checking queue status..."
            response=$(curl -fsS --retry 3 --max-time 30 \
              -X POST "$API_URL/api/cron/process-jobs" \
              -H "Content-Type: application/json" \
              -d '{"action":"status"}')
          else
            echo "🚀 Processing next job..."
            response=$(curl -fsS --retry 3 --max-time 30 \
              "$API_URL/api/cron/process-jobs")
          fi

          echo "📋 Response:"
          echo "$response" | jq . || echo "$response"

          # Parse result if JSON shape matches
          if echo "$response" | jq -e '.result.processed == true' >/dev/null 2>&1; then
            job_id=$(echo "$response" | jq -r '.result.jobId')
            chunk=$(echo "$response" | jq -r '.result.chunkIndex')
            total=$(echo "$response" | jq -r '.result.totalChunks')
            items=$(echo "$response" | jq -r '.result.itemsProcessed')
            echo "✅ Processed job $job_id"
            echo "📊 Chunk: $((chunk + 1))/$total, Items: $items"
          elif echo "$response" | jq -e '.result.processed == false' >/dev/null 2>&1; then
            echo "📭 No jobs in queue"
          else
            echo "⚠️ Unexpected response format"
          fi